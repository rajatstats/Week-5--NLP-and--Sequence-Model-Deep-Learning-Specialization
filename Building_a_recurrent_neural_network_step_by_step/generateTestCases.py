{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b0ac8619-a074-466e-9a63-b82a231de6b2",
   "metadata": {},
   "outputs": [],
   "source": [
    "# New Generate Test Cases \n",
    "from solutions import *\n",
    "import numpy as np \n",
    "import math \n",
    "import os,sys\n",
    "# import tensorflow as tf\n",
    "sys.path.append('../')\n",
    "sys.path.append('../../')\n",
    "\n",
    "from grader_support import stdout_redirector\n",
    "from grader_support import util\n",
    "\n",
    "\n",
    "mFiles = [\n",
    "    \"rnn_cell_forward.py\",\n",
    "    \"rnn_forward.py\",\n",
    "    \"lstm_cell_forward.py\",\n",
    "    \"lstm_forward.py\"\n",
    "]\n",
    "\n",
    "# generating test cases for rnn_cell_forward \n",
    "\n",
    "\n",
    "xt = np.random.randn(3,6)\n",
    "a_prev = np.random.randn(4,6)\n",
    "Waa = np.random.randn(4,4)\n",
    "Wax = np.random.randn(4,3)\n",
    "Wya = np.random.randn(2,4)\n",
    "ba = np.random.randn(4,1)\n",
    "by = np.random.randn(2,1)\n",
    "parameters = {\"Waa\": Waa, \"Wax\": Wax, \"Wya\": Wya, \"ba\": ba, \"by\": by}\n",
    "\n",
    "a_next, yt_pred, cache = rnn_cell_forward(xt, a_prev, parameters)\n",
    "\n",
    "# -------------------------------------------------------\n",
    "\n",
    "# generating test cases for rnn_forward\n",
    "\n",
    "\n",
    "x1 = np.random.randn(3,6,4)\n",
    "a01 = np.random.randn(4,6)\n",
    "parameters1 = {\"Waa\": Waa, \"Wax\": Wax, \"Wya\": Wya, \"ba\": ba, \"by\": by}\n",
    "a, y_pred, caches = rnn_forward(x1, a01, parameters1)\n",
    "\n",
    "# -------------------------------------------------------\n",
    "# generate test cases for lstm_cell_forward\n",
    "xt1 = np.random.randn(3,4)\n",
    "a_prev1 = np.random.randn(5,4)\n",
    "c_prev1 = np.random.randn(5,4)\n",
    "Wf = np.random.randn(5, 5+3)\n",
    "bf = np.random.randn(5,1)\n",
    "Wi = np.random.randn(5, 5+3)\n",
    "bi = np.random.randn(5,1)\n",
    "Wo = np.random.randn(5, 5+3)\n",
    "bo = np.random.randn(5,1)\n",
    "Wc = np.random.randn(5, 5+3)\n",
    "bc = np.random.randn(5,1)\n",
    "Wy = np.random.randn(2,5)\n",
    "by = np.random.randn(2,1)\n",
    "parameters2 = {\"Wf\": Wf, \"Wi\": Wi, \"Wo\": Wo, \"Wc\": Wc, \"Wy\": Wy, \"bf\": bf, \"bi\": bi, \"bo\": bo, \"bc\": bc, \"by\": by}\n",
    "a_next_lstm, c_next_lstm, yt_lstm, cache_lstm = lstm_cell_forward(xt1, a_prev1, c_prev1, parameters2)\n",
    "\n",
    "# -------------------------------------------------------\n",
    "# generate test cases for lstm_cell_forward\n",
    "# lstm_forward\n",
    "\n",
    "np.random.seed(1)\n",
    "x2 = np.random.randn(3,10,4)\n",
    "a02 = np.random.randn(5,10)\n",
    "Wf = np.random.randn(5, 5+3)\n",
    "bf = np.random.randn(5,1)\n",
    "Wi = np.random.randn(5, 5+3)\n",
    "bi = np.random.randn(5,1)\n",
    "Wo = np.random.randn(5, 5+3)\n",
    "bo = np.random.randn(5,1)\n",
    "Wc = np.random.randn(5, 5+3)\n",
    "bc = np.random.randn(5,1)\n",
    "Wy = np.random.randn(2,5)\n",
    "by = np.random.randn(2,1)\n",
    "\n",
    "parameters3 = {\"Wf\": Wf, \"Wi\": Wi, \"Wo\": Wo, \"Wc\": Wc, \"Wy\": Wy, \"bf\": bf, \"bi\": bi, \"bo\": bo, \"bc\": bc, \"by\": by}\n",
    "\n",
    "af, yf, cf, cachesf = lstm_forward(x2, a02, parameters3)\n",
    "\n",
    "def generateTestCases():\n",
    "\ttestCases = {\n",
    "\t    'rnn_cell_forward': { \n",
    "\t        'partId': 'KrqbT',\n",
    "\t        'testCases': [\n",
    "\t            {\n",
    "\t                'testInput': (xt, a_prev, parameters),\n",
    "\t                'testOutput': (a_next, yt_pred, cache)\n",
    "\t            }\n",
    "\t        ]\n",
    "\t    },\n",
    "\t    'rnn_forward': { \n",
    "\t        'partId': 'CzGAI',\n",
    "\t        'testCases': [\n",
    "\t            {\n",
    "\t                'testInput': (x1, a01, parameters1),\n",
    "\t                'testOutput': (a, y_pred, caches)\n",
    "\t            }\n",
    "\t        ]\n",
    "\t    },\n",
    "\t    'lstm_cell_forward': { \n",
    "\t        'partId': '7tvdt',\n",
    "\t        'testCases': [\n",
    "\t            {\n",
    "\t                'testInput': (xt1, a_prev1, c_prev1, parameters2),\n",
    "\t                'testOutput': (a_next_lstm, c_next_lstm, yt_lstm, cache_lstm)\n",
    "\t            }\n",
    "\t        ]\n",
    "\t    },\n",
    "\t    'lstm_forward': { \n",
    "\t        'partId': 'SAQvR',\n",
    "\t        'testCases': [\n",
    "\t            {\n",
    "\t                'testInput': (x2, a02, parameters3),\n",
    "\t                'testOutput': (af, yf, cf, cachesf)\n",
    "\t            }\n",
    "\t        ]\n",
    "\t    }\n",
    "\t}\n",
    "\treturn testCases\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
